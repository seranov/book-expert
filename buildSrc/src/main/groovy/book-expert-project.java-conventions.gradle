plugins {
    id 'java'
    id 'checkstyle'
    id 'com.github.spotbugs'
}

group = 'ru.seranov.book-expert'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
    gradlePluginPortal()
}

ext {
    set('lombokMapstructVersion', "0.2.0")
    set('mapstructVersion', "1.5.3.Final")
    set('commonsLang3Version', "3.12.0")
    set('postgresqlVersion', "42.5.0")
    set('postgresqlR2dbcVersion', "1.0.0.RC1")
    set('testcontainersVersion', "1.17.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.integration:spring-integration-amqp'
    implementation 'org.springframework.integration:spring-integration-jdbc'
    implementation 'org.springframework.integration:spring-integration-jpa'
    implementation 'org.springframework.integration:spring-integration-mongodb'
    implementation 'org.springframework.integration:spring-integration-r2dbc'
    implementation 'org.springframework.integration:spring-integration-security'
    implementation 'org.springframework.integration:spring-integration-stomp'
    implementation 'org.springframework.integration:spring-integration-webflux'
    implementation 'org.springframework.integration:spring-integration-websocket'
    implementation 'org.springframework.session:spring-session-jdbc'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    implementation "org.postgresql:postgresql:${postgresqlVersion}"
    implementation "org.postgresql:r2dbc-postgresql:${postgresqlR2dbcVersion}"
    compileOnly "org.projectlombok:lombok"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
    testImplementation 'org.springframework.integration:spring-integration-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}